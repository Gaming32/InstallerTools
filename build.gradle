plugins {
  id 'java-library'
  id 'maven-publish'
  id 'eclipse'
  id 'org.cadixdev.licenser' version '0.6.1'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
  id 'com.github.ben-manes.versions' version '0.42.0'
  id 'net.neoforged.gradleutils' version '3.0.0-alpha.10'
}

group = 'net.neoforged.installertools'

base {
    archivesName = 'installertools'
}

gradleutils.version {
    branches.suffixBranch()
}

gradleutils.setupSigning(signAllPublications: true)

version = gradleutils.version
println('Version: ' + version)
java.toolchain.languageVersion = JavaLanguageVersion.of(8)

repositories {
    mavenCentral()
}

license {
  header project.file('LICENSE-header.txt')
  include 'net/neoforged/installertools/**/*.java'
  newLine false
}

jar {
    manifest.attributes('Main-Class': 'net.neoforged.installertools.ConsoleTool')
    manifest.attributes('Implementation-Version': project.version)
}
shadowJar {
    archiveClassifier = 'fatjar'
    manifest.attributes('Main-Class': 'net.neoforged.installertools.ConsoleTool')
    manifest.attributes('Implementation-Version': project.version)
}

java {
    withSourcesJar()
}

dependencies {
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'net.md-5:SpecialSource:1.11.0'
    implementation 'de.siegmar:fastcsv:2.0.0'
    implementation 'net.neoforged:srgutils:1.0.0'
    implementation 'org.ow2.asm:asm-commons:9.3'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = base.archivesName.get()

            pom {
                name = 'Installer Tools'
                description = 'A collection of command line tools that are useful for the Forge installer, that are not worth being their own standalone projects.'
                pomUtils.githubRepo(it, 'InstallerTools')

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                pomUtils.neoForgedDeveloper(it)
            }
        }
    }
    repositories {
        maven gradleutils.publishingMaven
        maven {
            name 'local'
            url file('repo')
        }
    }
}
